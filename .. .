-- Safe check: destroy existing if rerun
pcall(function() game:GetService("CoreGui").patrickGui:Destroy() end)

local gui = Instance.new("ScreenGui")
gui.Name = "patrickGui"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = game:GetService("CoreGui")

-- Create toggle button
local TextButton = Instance.new("TextButton")
TextButton.Name = "ToggleButton"
TextButton.Text = "Toggle UI"
TextButton.TextSize = 18
TextButton.Font = Enum.Font.GothamBold
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
TextButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BorderSizePixel = 2
TextButton.Size = UDim2.new(0, 140, 0, 40)
TextButton.Position = UDim2.new(0, 10, 1, -60)
TextButton.AnchorPoint = Vector2.new(0, 1)
TextButton.AutoButtonColor = true
TextButton.Parent = gui
TextButton.Active = true
TextButton.Selectable = true

-- Rounded corners
local cornerUI = Instance.new("UICorner")
cornerUI.CornerRadius = UDim.new(0, 8)
cornerUI.Parent = TextButton

-- White outline
local uiStroke = Instance.new("UIStroke")
uiStroke.Color = Color3.new(1, 1, 1)
uiStroke.Thickness = 2
uiStroke.Parent = TextButton

-- Function to toggle UI
local function tryToggleUI()
    if Library and Library.ToggleUI then
        Library:ToggleUI()
    elseif Library and Library:FindFirstChild("Main") then
        Library.Main.Visible = not Library.Main.Visible
    else
        warn("⚠️ UI Library not found or doesn't have ToggleUI method.")
    end
end

-- Support mobile + mouse
TextButton.MouseButton1Click:Connect(tryToggleUI)

-- Optional: Touch support fallback
local UIS = game:GetService("UserInputService")
UIS.TouchTap:Connect(function(touches, isProcessed)
    if not isProcessed then
        local touch = touches[1]
        if touch and TextButton.AbsolutePosition and TextButton.AbsoluteSize then
            local pos = touch.Position
            local absPos = TextButton.AbsolutePosition
            local absSize = TextButton.AbsoluteSize
            if pos.X >= absPos.X and pos.X <= absPos.X + absSize.X and
               pos.Y >= absPos.Y and pos.Y <= absPos.Y + absSize.Y then
                tryToggleUI()
            end
        end
    end
end)
